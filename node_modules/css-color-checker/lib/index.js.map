{"version":3,"sources":["../src/index.ts"],"names":["cssColorNames","Object","keys","cssColors","isValidRgbValues","values","value","isColorName","name","isHexColor","match","isRgbColor","rgbMatches","length","rgb","r","g","b","isRgbaColor","rgbaMatches","a","isHslColor","hslMatches","hsl","h","s","l","isHslaColor","hslaMatches","isHwbColor","hwbMatches","hwb","w","whiteness","Number","parseFloat","blackness","err","cssColorFormat","colorTypeCheckers","colorCheckingFunction","typeName","isCssColor"],"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","sourcesContent":["import * as cssColors from './css-named-colors';\r\nimport {\r\n  isValidAlphaValue,\r\n  isValidPercentageString,\r\n  isValidPercentage,\r\n  isValidHue,\r\n  isValidRgbVal,\r\n} from './value-checks';\r\n\r\nconst cssColorNames = Object.keys(cssColors);\r\n\r\nfunction isValidRgbValues(...values: string[]): boolean {\r\n  for (const value of values) {\r\n    if (!isValidRgbVal(value)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function isColorName(value?: unknown | null) {\r\n  for (const name of cssColorNames) {\r\n    if (name === value) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function isHexColor(value?: unknown | null): boolean {\r\n  return (\r\n    typeof value === 'string' &&\r\n    value.match(/^#(?:[0-9a-f]{3}|[0-9a-f]{6}|[0-9a-f]{8})$/i) !== null\r\n  );\r\n}\r\n\r\nexport function isRgbColor(value?: unknown | null): boolean {\r\n  if (typeof value !== 'string') {\r\n    return false;\r\n  }\r\n  const rgbMatches: RegExpMatchArray | null = value.match(\r\n    /^rgb\\s*\\(\\s*(\\d+|\\d*\\.\\d+)\\s*,\\s*(\\d+|\\d*\\.\\d+)\\s*,\\s*(\\d+|\\d*\\.\\d+)\\s*\\)$/,\r\n  );\r\n  if (rgbMatches && rgbMatches.length >= 4) {\r\n    const [rgb, r, g, b] = rgbMatches;\r\n    if (isValidRgbValues(r, g, b)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function isRgbaColor(value?: unknown | null): boolean {\r\n  if (typeof value !== 'string') {\r\n    return false;\r\n  }\r\n  const rgbaMatches: RegExpMatchArray | null = value.match(\r\n    /^rgba\\s*\\(\\s*(\\d+|\\d*\\.\\d+)\\s*,\\s*(\\d+|\\d*\\.\\d+)\\s*,\\s*(\\d+|\\d*\\.\\d+)\\s*,\\s*(\\d+|\\d*\\.\\d+)\\s*\\)$/,\r\n  );\r\n  if (rgbaMatches && rgbaMatches.length >= 5) {\r\n    const [rgb, r, g, b, a] = rgbaMatches;\r\n    if (isValidRgbValues(r, g, b) && isValidAlphaValue(a)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function isHslColor(value?: unknown | null): boolean {\r\n  if (typeof value !== 'string') {\r\n    return false;\r\n  }\r\n  const hslMatches: RegExpMatchArray | null = value.match(\r\n    /^hsl\\s*\\(\\s*(\\d+|\\d*\\.\\d+)\\s*,\\s*(\\d+|\\d*\\.\\d+)%\\s*,\\s*(\\d+|\\d*\\.\\d+)%\\s*\\)$/,\r\n  );\r\n  if (hslMatches && hslMatches.length >= 4) {\r\n    const [hsl, h, s, l] = hslMatches;\r\n    if (isValidHue(h) && isValidPercentageString(s) && isValidPercentageString(l)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function isHslaColor(value?: unknown | null): boolean {\r\n  if (typeof value !== 'string') {\r\n    return false;\r\n  }\r\n  const hslaMatches: RegExpMatchArray | null = value.match(\r\n    /^hsla\\s*\\(\\s*(\\d+|\\d*\\.\\d+)\\s*,\\s*(\\d+|\\d*\\.\\d+)%\\s*,\\s*(\\d+|\\d*\\.\\d+)%\\s*,\\s*(\\d+|\\d*\\.\\d+)\\s*\\)$/,\r\n  );\r\n  if (hslaMatches && hslaMatches.length >= 5) {\r\n    const [hsl, h, s, l, a] = hslaMatches;\r\n    if (\r\n      isValidHue(h) &&\r\n      isValidPercentageString(s) &&\r\n      isValidPercentageString(l) &&\r\n      isValidAlphaValue(a)\r\n    ) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function isHwbColor(value?: unknown | null): boolean {\r\n  if (typeof value !== 'string') {\r\n    return false;\r\n  }\r\n  const hwbMatches: RegExpMatchArray | null = value.match(\r\n    /^hwb\\s*\\(\\s*(\\d+|\\d*\\.\\d+)\\s*,\\s*(\\d+|\\d*\\.\\d+)%\\s*,\\s*(\\d+|\\d*\\.\\d+)%\\s*\\)$/,\r\n  );\r\n  if (hwbMatches && hwbMatches.length >= 4) {\r\n    const [hwb, h, w, b] = hwbMatches;\r\n    try {\r\n      const whiteness: number = Number.parseFloat(w);\r\n      const blackness: number = Number.parseFloat(b);\r\n      if (\r\n        isValidHue(h) &&\r\n        isValidPercentage(whiteness + blackness) &&\r\n        isValidPercentage(whiteness) &&\r\n        isValidPercentage(blackness)\r\n      ) {\r\n        return true;\r\n      }\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport type ColorType = 'hsla' | 'hsl' | 'rgb' | 'rgba' | 'hex' | 'named' | 'hwb' | null;\r\nexport function cssColorFormat(value?: unknown | null): ColorType {\r\n  if (typeof value !== 'string') {\r\n    return null;\r\n  }\r\n  const colorTypeCheckers: [(s: unknown) => boolean, ColorType][] = [\r\n    [isHexColor, 'hex'],\r\n    [isHslaColor, 'hsla'],\r\n    [isHslColor, 'hsl'],\r\n    [isRgbColor, 'rgb'],\r\n    [isRgbaColor, 'rgba'],\r\n    [isColorName, 'named'],\r\n    [isHwbColor, 'hwb'],\r\n  ];\r\n  for (const [colorCheckingFunction, typeName] of colorTypeCheckers) {\r\n    if (colorCheckingFunction(value)) {\r\n      return typeName;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function isCssColor(value: string): boolean {\r\n  if (cssColorFormat(value)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default cssColorFormat;\r\n"],"file":"index.js"}