"use strict";

var cov_2529its05u = function () {
  var path = "C:\\Users\\eastd\\Code\\css-color-checker\\src\\value-checks.ts",
      hash = "e117ac7964d2de8e88804a99f287065307f6de38",
      Function = function () {}.constructor,
      global = new Function('return this')(),
      gcv = "__coverage__",
      coverageData = {
    path: "C:\\Users\\eastd\\Code\\css-color-checker\\src\\value-checks.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 2
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 30
        },
        end: {
          line: 3,
          column: 64
        }
      },
      "2": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 4,
          column: 46
        }
      },
      "3": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 17
        }
      },
      "4": {
        start: {
          line: 11,
          column: 2
        },
        end: {
          line: 16,
          column: 3
        }
      },
      "5": {
        start: {
          line: 12,
          column: 30
        },
        end: {
          line: 12,
          column: 64
        }
      },
      "6": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 44
        }
      },
      "7": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 17
        }
      },
      "8": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "9": {
        start: {
          line: 21,
          column: 30
        },
        end: {
          line: 21,
          column: 64
        }
      },
      "10": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 40
        }
      },
      "11": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 17
        }
      },
      "12": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 28,
          column: 44
        }
      },
      "13": {
        start: {
          line: 32,
          column: 2
        },
        end: {
          line: 37,
          column: 3
        }
      },
      "14": {
        start: {
          line: 33,
          column: 26
        },
        end: {
          line: 33,
          column: 56
        }
      },
      "15": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 38
        }
      },
      "16": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "isValidRgbVal",
        decl: {
          start: {
            line: 1,
            column: 16
          },
          end: {
            line: 1,
            column: 29
          }
        },
        loc: {
          start: {
            line: 1,
            column: 64
          },
          end: {
            line: 8,
            column: 1
          }
        },
        line: 1
      },
      "1": {
        name: "isValidAlphaValue",
        decl: {
          start: {
            line: 10,
            column: 16
          },
          end: {
            line: 10,
            column: 33
          }
        },
        loc: {
          start: {
            line: 10,
            column: 68
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 10
      },
      "2": {
        name: "isValidPercentageString",
        decl: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 19,
            column: 39
          }
        },
        loc: {
          start: {
            line: 19,
            column: 74
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 19
      },
      "3": {
        name: "isValidPercentage",
        decl: {
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 62
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 27
      },
      "4": {
        name: "isValidHue",
        decl: {
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 31,
            column: 26
          }
        },
        loc: {
          start: {
            line: 31,
            column: 57
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 31
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 4,
            column: 11
          },
          end: {
            line: 4,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 11
          },
          end: {
            line: 4,
            column: 25
          }
        }, {
          start: {
            line: 4,
            column: 29
          },
          end: {
            line: 4,
            column: 45
          }
        }],
        line: 4
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 11
          },
          end: {
            line: 13,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 11
          },
          end: {
            line: 13,
            column: 25
          }
        }, {
          start: {
            line: 13,
            column: 29
          },
          end: {
            line: 13,
            column: 43
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 23
          }
        }, {
          start: {
            line: 28,
            column: 27
          },
          end: {
            line: 28,
            column: 43
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 34,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 34,
            column: 21
          }
        }, {
          start: {
            line: 34,
            column: 25
          },
          end: {
            line: 34,
            column: 37
          }
        }],
        line: 34
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184"
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isValidRgbVal = isValidRgbVal;
exports.isValidAlphaValue = isValidAlphaValue;
exports.isValidPercentageString = isValidPercentageString;
exports.isValidPercentage = isValidPercentage;
exports.isValidHue = isValidHue;

function isValidRgbVal(magnitudeString) {
  cov_2529its05u.f[0]++;
  cov_2529its05u.s[0]++;

  try {
    const magnitude = (cov_2529its05u.s[1]++, Number.parseFloat(magnitudeString));
    cov_2529its05u.s[2]++;
    return (cov_2529its05u.b[0][0]++, magnitude >= 0) && (cov_2529its05u.b[0][1]++, magnitude <= 255);
  } catch (err) {
    cov_2529its05u.s[3]++;
    return false;
  }
}

function isValidAlphaValue(magnitudeString) {
  cov_2529its05u.f[1]++;
  cov_2529its05u.s[4]++;

  try {
    const magnitude = (cov_2529its05u.s[5]++, Number.parseFloat(magnitudeString));
    cov_2529its05u.s[6]++;
    return (cov_2529its05u.b[1][0]++, magnitude <= 1) && (cov_2529its05u.b[1][1]++, magnitude >= 0);
  } catch (err) {
    cov_2529its05u.s[7]++;
    return false;
  }
}

function isValidPercentageString(magnitudeString) {
  cov_2529its05u.f[2]++;
  cov_2529its05u.s[8]++;

  try {
    const magnitude = (cov_2529its05u.s[9]++, Number.parseFloat(magnitudeString));
    cov_2529its05u.s[10]++;
    return isValidPercentage(magnitude);
  } catch (err) {
    cov_2529its05u.s[11]++;
    return false;
  }
}

function isValidPercentage(magnitude) {
  cov_2529its05u.f[3]++;
  cov_2529its05u.s[12]++;
  return (cov_2529its05u.b[2][0]++, magnitude >= 0) && (cov_2529its05u.b[2][1]++, magnitude <= 100);
}

function isValidHue(valueString) {
  cov_2529its05u.f[4]++;
  cov_2529its05u.s[13]++;

  try {
    const value = (cov_2529its05u.s[14]++, Number.parseFloat(valueString));
    cov_2529its05u.s[15]++;
    return (cov_2529its05u.b[3][0]++, value >= 0) && (cov_2529its05u.b[3][1]++, value <= 360);
  } catch (err) {
    cov_2529its05u.s[16]++;
    return false;
  }
}
//# sourceMappingURL=value-checks.js.map